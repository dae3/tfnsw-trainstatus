pipeline {
	agent none
	parameters { 
		string(name: 'Environment', defaultValue: 'dev', description: 'target environment name')
	}

	stages {
		stage('build') {
			agent {
				docker {
					image 'node:10-alpine'
					args '-p 3000:3000'
				}
			}
			steps {
				dir('formatAlertForPush') {
					sh 'npm install'
					zip zipFile: 'formatAlertForPush.zip'
				} 
			}
		}
		stage('deploy') {
			agent none

			steps {
				s3Upload consoleLogLevel: 'INFO', dontWaitForConcurrentBuildCompletion: false, entries: [[bucket: "tfnsw-${params.Environment}-code", excludedFile: '', flatten: false, gzipFiles: false, keepForever: false, managedArtifacts: false, noUploadOnFailure: false, selectedRegion: 'us-iso-east-1', showDirectlyInBrowser: false, sourceFile: 'formatAlertForPush.zip', storageClass: 'STANDARD', uploadFromSlave: false, useServerSideEncryption: false]], pluginFailureResultConstraint: 'FAILURE', profileName: 'tfnsw', userMetadata: []
			}
		}
	}

	post {
		always {
			archiveArtifacts artifacts: '*.zip', fingerprint: true
		}
	}
}
